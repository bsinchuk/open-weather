{"version":3,"sources":["actions/index.js","components/Adder.js","components/WeatherCard.js","components/ForecastWidget.js","components/WeatherModal.js","components/Dashboard.js","App.js","reducers/index.js","index.js"],"names":["ADD_CITY","RECIEVE_CITY_WEATHER","CATCH_ERROR","RECIEVE_ALL_WEATHER","DELETE_CITY","UPDATE_CITY","RECIEVE_CITY_UPDATE","FETCH_FORECAST","RECIEVE_FORECAST","CLOSE_FORECAST","key","process","updateCity","id","type","fetchForecast","getCityData","city","a","url","fetch","res","json","data","prepareData","name","country","sys","temp","main","icon","weather","updating","fetching","expand","lon","coord","lat","useStyles","makeStyles","theme","adder","display","flexDirection","justifyContent","alignItems","width","minWidth","maxWidth","connect","state","error","isAdding","adding","dispatch","fetchWeather","getState","i","localStorage","length","getItem","Error","item","setItem","payload","text","message","info","fetchCityWeather","props","cityRef","useRef","classes","className","onSubmit","e","preventDefault","current","value","TextField","placeholder","label","margin","size","variant","fullWidth","inputRef","helperText","Button","color","disabled","data-testid","root","cursor","header","alignSelf","img","marginLeft","spinner","marginTop","marginBottom","WeatherCard","coords","onUpdate","onDelete","onExpand","imgSrc","tempStr","Math","round","content","CardMedia","component","src","CardContent","Typography","align","CardActions","disableSpacing","IconButton","aria-label","onClick","bind","CircularProgress","Card","CardHeader","title","subheader","React","memo","prevProps","nextProps","container","height","fontFamily","box","time","fontSize","ForecastWidget","forecast","hours","sum","reduce","prev","next","avg","map","el","index","tempToColor","r","g","b","style","wrapper","backgroundColor","padding","textAlign","objectFit","paddingTop","paddingBottom","borderTop","borderBottom","column","WeatherModal","feelsStr","feels","date","Date","offset","getHours","minutes","getMinutes","windStr","wind","alt","description","humidity","clouds","toLowerCase","desc","hourly","modal","overflow","cities","initiate","cityList","push","join","list","console","log","remove","removeItem","deleteCity","update","updateCityWeather","getForecast","feels_like","wind_speed","dt","timezone_offset","slice","requestForecast","close","closeForecast","useState","isOpen","setIsOpen","useEffect","updateHandler","removeHandler","expandHandler","defaultPrevented","result","find","expanded","Grid","spacing","direction","justify","zeroMinWidth","Modal","aria-labelledby","aria-describedby","open","onClose","setTimeout","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","alignItem","App","Fragment","CssBaseline","defaultState","loading","basicReducer","action","filter","composeEnhancers","compose","middleware","thunk","store","createStore","applyMiddleware","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56b05800.chunk.js","sourcesContent":["export const ADD_CITY = 'ADD_CITY';\nexport const RECIEVE_CITY_WEATHER = 'RECIEVE_CITY_WEATHER';\nexport const CATCH_ERROR = 'CATCH_ERROR';\nexport const RECIEVE_ALL_WEATHER = 'RECIEVE_ALL_WEATHER';\nexport const DELETE_CITY = 'DELETE_CITY';\nexport const UPDATE_CITY = 'UPDATE_CITY'\nexport const RECIEVE_CITY_UPDATE = 'RECIEVE_CITY_UPDATE';\nexport const FETCH_FORECAST = 'FETCH_FORECAST';\nexport const RECIEVE_FORECAST = 'RECIEVE_FORECAST';\nexport const CLOSE_FORECAST = 'CLOSE_FORECAST';\n\nconst key = process.env.REACT_APP_WEATHER_API_KEY;\n\nconst addCity = () => ({\n  type: ADD_CITY,\n});\n\nconst updateCity = (id) => ({\n  type: UPDATE_CITY,\n  id: id,\n});\n\nconst fetchForecast = (id) => ({\n  type: FETCH_FORECAST,\n  id: id,\n})\n\nexport const fetchCityWeather = city => async (dispatch, getState) => {\n  dispatch(addCity());\n  try {\n    for (let i = 0; i < localStorage.length; i++) {\n      if (localStorage.getItem(city)) {\n        throw new Error('exist');\n      } \n    }\n\n    const data = await getCityData(city);\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const item = +localStorage.getItem(localStorage.key(i));\n      if (data.id === item) {\n        throw new Error('exist');\n      } \n    }\n    \n    localStorage.setItem(city, data.id);\n    dispatch({\n      type: RECIEVE_CITY_WEATHER,\n      payload: data,\n    });\n  } catch (err) {\n    let text = '';\n    if (err.message === 'exist') {\n      text = city + ' already exists.'\n    } else {\n      text = 'No such city.'\n    }\n    dispatch({\n      type: CATCH_ERROR,\n      info: text,\n    });\n  }\n};\n\nexport const fetchAllWeather =  () => async (dispatch) => {\n  const cityList = [];\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    cityList.push(localStorage.getItem(key));\n  }\n  if (cityList.length > 0) {\n    const url = `https://api.openweathermap.org/data/2.5/group?id=${cityList.join(',')}&units=metric&APPID=${key}`;\n    try {\n      const res = await fetch(url);\n      const json = await res.json();\n      const data = json.list.map(el => prepareData(el));\n      dispatch({\n        type: RECIEVE_ALL_WEATHER,\n        payload: data\n      });\n    } catch (err) {\n      console.log(err);\n    }    \n  }\n};\n\nexport const deleteCity = (id) => {\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (+localStorage.getItem(key) === id) {\n      localStorage.removeItem(key);\n      break;\n    }\n  }\n  return {\n    type: DELETE_CITY,\n    id: id\n  };\n}\n\nexport const updateCityWeather = (id) => async (dispatch) => {\n  dispatch(updateCity(id));\n  let city = null;\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (+localStorage.getItem(key) === id) {\n      city = key;\n      break;\n    }\n  }\n  const data = await getCityData(city);\n  dispatch({\n    type: RECIEVE_CITY_UPDATE,\n    payload: data,\n  })\n};\n\nexport const requestForecast = (id, coords) => async (dispatch) => {\n  dispatch(fetchForecast(id));\n  const {lat, lon} = coords;\n  const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=minutely,daily,alerts&appid=${key}`;\n  try {\n    const res = await fetch(url);\n    const json = await res.json();\n    const data = {\n      clouds: json.current.clouds,\n      feels: json.current.feels_like,\n      humidity: json.current.humidity,\n      temp: json.current.temp,\n      wind: json.current.wind_speed,\n      time: json.current.dt,\n      offset: json.timezone_offset === 10800 ? 0 : (json.timezone_offset - 10800),\n      main: json.current.weather[0].main,\n      description: json.current.weather[0].description,\n      icon: json.current.weather[0].icon,\n      hourly: json.hourly.slice(0, 8).map(el => ({\n        time: el.dt,\n        temp: el.temp\n      })),\n    };\n    dispatch({\n      type: RECIEVE_FORECAST,\n      payload: data,\n      id: id,\n    });\n  } catch (err) {\n    console.log(err)\n  }\n};\n\nexport const closeForecast = (id) => ({\n  type: CLOSE_FORECAST,\n  id: id,\n});\n\n\nconst getCityData = async (city) => {\n  const url = `//api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}&units=metric&mode=json`;\n  const res = await fetch(url);\n  const json = await res.json();\n  const data = prepareData(json);\n  return data;\n};\n\nconst prepareData = (json) => ({\n  name: json.name,\n  id: json.id,\n  country: json.sys.country,\n  temp: json.main.temp,\n  icon: json.weather[0].icon,\n  updating: false,\n  fetching: true,\n  expand: false,\n  lon: json.coord.lon,\n  lat: json.coord.lat,\n});","import React, { useRef } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nimport { fetchCityWeather } from '../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  adder: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '50%',\n    minWidth: 220,\n    maxWidth: 400,\n  }\n}));\n\nexport const Adder = props => {\n  const cityRef = useRef();\n  const classes = useStyles();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    props.fetchWeather(cityRef.current.value);\n  };\n\n  return (\n    <form className={classes.adder} onSubmit={submitHandler} >\n      <TextField\n        id=\"city-input\"\n        placeholder=\"Enter a City\"\n        label=\"City\"\n        margin=\"normal\"\n        size=\"medium\"\n        variant=\"filled\"\n        fullWidth\n        inputRef={cityRef}\n        error={props.error.length > 0}\n        helperText={props.error.length > 0 ? props.error: ''}\n      />\n      <Button \n        size=\"large\"\n        variant=\"contained\" \n        color=\"primary\"\n        type=\"submit\"\n        disabled={props.isAdding}\n        data-testid=\"add-button\"\n      >\n        Add\n      </Button>\n    </form>\n  )\n\n};\n\nconst mapStateToProps = state => ({\n  error: state.error,\n  isAdding: state.adding,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchWeather: city => dispatch(fetchCityWeather(city)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Adder);","import React from 'react';\nimport { Card, CardHeader, CardMedia, CardContent,\n         Typography, CardActions, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 220,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  header: {\n    alignSelf: 'flex-start',\n  },\n  img: {\n    width: 100,\n  },\n  temp: {\n    marginLeft: 10,\n  },\n  spinner: {\n    marginTop: 99,\n    marginBottom: 98,\n  }\n}));\n\nconst WeatherCard = ({ id, city, country, icon, temp, coords,\n                       updating, onUpdate, onDelete, onExpand  }) => {\n\n  const classes = useStyles();\n  const imgSrc = process.env.PUBLIC_URL + `/img/${icon}.png`;\n  const tempStr = Math.round(temp) + '°';\n\n  let content = (\n    <>\n      <CardMedia\n        className={classes.img}\n        component=\"img\"\n        src={imgSrc} />\n      <CardContent>\n        <Typography className={classes.temp}\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"h4\"\n          data-testid=\"card-temp\">\n          {tempStr}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"update\" onClick={onUpdate.bind(null, id)} >\n          <UpdateIcon color=\"primary\" />\n        </IconButton>\n        <IconButton aria-label=\"delete\" onClick={onDelete.bind(null, id)} >\n          <DeleteIcon color=\"secondary\" />\n        </IconButton>\n      </CardActions>\n    </>\n  );\n\n  if (updating) {\n    content = (\n      <CircularProgress className={classes.spinner} data-testid=\"card-spinner\"/>\n    )\n  }\n\n  return (\n    <Card \n      variant=\"outlined\" \n      className={classes.root}\n      onClick={onExpand.bind(null, id, coords)}>\n      <CardHeader\n        className={classes.header} \n        title={city} \n        subheader={country} />\n      {content}\n    </Card>\n  );\n}\n\nexport default React.memo(WeatherCard, (prevProps, nextProps) => {\n  return prevProps.temp === nextProps.temp && prevProps.updating === nextProps.updating;\n});","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { tempToColor } from 'temp-color';\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: 400,\n    height: 130,\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif;',\n    \"@media (max-width:450px)\": {\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: 'auto',\n      width: '100%',\n    }\n  },\n  box: {\n    width: 50,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: 3,\n    \"@media (max-width:450px)\": {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 'auto',\n      width: '100%',\n      marginTop: 10,\n    }\n  },\n  time: {\n    height: 30,\n    width: '100%',\n    margin: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '1rem',\n    color: 'grey',\n    \"@media (max-width:450px)\": {\n      height: 'auto',\n    }\n  },\n  temp: {\n    height: 40,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '1.5rem',\n    \"@media (max-width:450px)\": {\n      height: 'auto',\n      margin: '0 !important',\n    }\n  }\n}));\n\nconst ForecastWidget = ({ forecast, hours }) => {\n  const classes = useStyles();\n  const sum = forecast.reduce((prev, next) => prev + next.temp, 0);\n  let avg = Math.round((sum / forecast.length));\n  if (avg === 0) avg = 1;\n  const tresh = 30;\n  const coef = 1.5;\n  return (\n    <div className={classes.container}>\n      {\n        forecast.map((el, index) => {\n          let time = (+hours + index) % 24;\n          if (time < 10) time = '0' + time;\n          time += ':00'\n          const temp = Math.round(el.temp);\n          const diff = (temp - avg) * coef;\n          const margin = tresh - diff;\n          const { r, g, b } = tempToColor(temp, -20, 40);\n          return (\n            <div key={index} className={classes.box}>\n              <p className={classes.time}>\n                {time}\n              </p>\n              <div className={classes.temp} style={{\n                'marginTop': `${margin}px`,\n                'backgroundColor': `rgba(${r},${g},${b}, 0.6)`\n                }}\n              >\n                {temp}\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n};\n\nexport default ForecastWidget;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\n\nimport ForecastWidget from './ForecastWidget';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    padding: 15,\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif;',\n    \"@media (max-width:450px)\": { width: 250, },\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  city: {\n    fontSize: '1.5rem',\n    margin: 0,\n  },\n  country: {\n    fontSize: '1rem',\n    color: 'grey',\n    margin: 0,\n  },\n  temp: {\n    fontSize: '2rem',\n    textAlign: 'center',\n    margin: 0,\n  },\n  img: {\n    objectFit: 'cover',\n  },\n  content: {\n    display: 'flex',\n    width: '100%',\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    marginBottom: 10,\n    fontSize: '1rem',\n    color: 'grey',\n    borderTop: '1px solid grey',\n    borderBottom: '1px solid grey',\n  },\n  column: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '50%',\n    padding: 5,\n    '&:first-child': {\n      alignItems: 'flex-end',\n    },\n    '&:last-child': {\n      alignItems: 'flex-start',\n    }\n  }\n}));\n\nconst WeatherModal = (props) => {\n  const classes = useStyles();\n  \n  const imgSrc = process.env.PUBLIC_URL + `/img/${props.icon}.png`;\n  const tempStr = Math.round(props.temp) + '°';\n  const feelsStr = Math.round(props.feels) + '°';\n  const date = new Date((props.time + props.offset) * 1000);\n  let hours = date.getHours();\n  if (hours < 10) hours = '0' + hours;\n  let minutes = date.getMinutes();\n  if (minutes < 10) minutes = '0' + minutes;\n  const windStr = Math.round(props.wind) + ' m/s';\n\n  let content = '';\n  if (props.fetching) {\n    content = <CircularProgress color='secondary' data-testid=\"modal-spinner\"/>;\n  } else if (props.city) {\n    content = (\n      <div className={classes.wrapper}>\n        <div className={classes.header}>\n          <div>\n            <p className={classes.city} data-testid=\"modal-city\">\n              {props.city}\n            </p>\n            <p className={classes.country}>\n              {props.country}\n            </p>\n            <p className={classes.temp}>\n              {tempStr}\n            </p>\n          </div>\n          <img src={imgSrc} alt={props.description} className={classes.img}/>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.column}>\n            <span>Current time:</span>\n            <span>Feels like:</span>\n            <span>Humidity:</span>\n            <span>Clouds:</span>\n            <span>Wind: </span>\n            <span>Weather: </span>\n            <span>Detailed: </span>\n          </div>\n          <div className={classes.column}>\n            <span>\n              {`${hours}:${minutes}`}\n            </span>\n            <span>\n              {feelsStr}\n            </span>\n            <span>\n              {props.humidity + ' %'}\n            </span>\n            <span>\n              {props.clouds + ' %'}\n            </span>\n            <span>\n              {windStr}\n            </span>\n            <span>\n              {props.main.toLowerCase()}\n            </span>\n            <span>\n              {props.desc}\n            </span>\n          </div>\n        </div>\n        <ForecastWidget forecast={props.hourly} hours={hours}/>\n      </div>\n    );\n  } else {\n    content = <p data-testid=\"modal-empty\"></p>;\n  }\n  return content;\n};\n\nexport default WeatherModal;","import React, { useEffect, useState } from 'react';\nimport { Grid, Backdrop, Fade, Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nimport WeatherCard from './WeatherCard';\nimport WeatherModal from './WeatherModal';\nimport { fetchAllWeather, deleteCity, updateCityWeather, \n         requestForecast, closeForecast } from '../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    \"@media (max-width:450px)\": {\n      overflow: 'scroll',\n      alignItems: 'flex-start',\n      marginTop: 20,\n    }\n  },\n}));\n\nconst Dashboard = props => {\n  const [isOpen, setIsOpen] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    props.initiate();\n  }, []);\n\n  const closeModal = () => {\n    setIsOpen(false);\n    setTimeout(() => props.close(expanded.id), 600);\n  }\n\n  const updateHandler = (id, e) => {\n    e.preventDefault();\n    props.update(id);\n  }\n\n  const removeHandler = (id, e) => {\n    e.preventDefault();\n    props.remove(id);\n  }\n\n  const expandHandler = (id, coords, e) => {\n    if (!e.defaultPrevented) {\n      props.getForecast(id, coords);\n      setIsOpen(true);\n    }\n  }\n\n  const result = props.cities.find(city => city.expand === true);\n  const expanded = result ? result : {};\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={3}\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"center\"\n        data-testid=\"dashboard-container\"\n      >\n      {\n        props.cities.map((city, index) => (\n          <Grid key={index} item zeroMinWidth >\n            <WeatherCard\n              id={city.id}\n              country={city.country}\n              icon={city.icon}\n              temp={city.temp}\n              city={city.name}\n              coords={{\n                lat: city.lat,\n                lon: city.lon\n              }}\n              updating={city.updating}\n              onUpdate={updateHandler}\n              onDelete={removeHandler}\n              onExpand={expandHandler}\n            />\n          </Grid>\n        ))\n      }\n      </Grid>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={isOpen}\n        onClose={closeModal}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={isOpen}>\n          <WeatherModal\n            fetching={expanded.fetching}\n            country={expanded.country}\n            icon={expanded.icon}\n            temp={expanded.temp}\n            city={expanded.name}\n            feels={expanded.feels}\n            humidity={expanded.humidity}\n            wind={expanded.wind}\n            time={expanded.time}\n            offset={expanded.offset}\n            main={expanded.main}\n            desc={expanded.description}\n            hourly={expanded.hourly}\n            clouds={expanded.clouds}\n          />\n        </Fade>\n      </Modal>\n    </>\n  );\n\n};\n\nconst mapStateToProps = state => ({\n  cities: state.weather,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  initiate: () => dispatch(fetchAllWeather()),\n  remove: (id) => dispatch(deleteCity(id)),\n  update: (id) => dispatch(updateCityWeather(id)),\n  getForecast: (id, coords) => dispatch(requestForecast(id, coords)),\n  close: (id) => dispatch(closeForecast(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React from 'react';\nimport { Grid, CssBaseline } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Adder from './components/Adder';\nimport Dashboard from './components/Dashboard';\n\nconst useStyles = makeStyles((theme) => ({\n  'spacing-xs-3': {\n    width: '100%',\n    margin: 0,\n  },\n  'item-wrapper': {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItem: 'center',\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Grid\n        container\n        spacing={3}\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        className={classes['spacing-xs-3']} >\n        <Grid item className={classes['item-wrapper']}>\n          <Adder />\n        </Grid>\n        <Grid item>\n          <Dashboard />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { ADD_CITY, RECIEVE_CITY_WEATHER, CATCH_ERROR, \n         RECIEVE_ALL_WEATHER, DELETE_CITY, UPDATE_CITY,\n         RECIEVE_CITY_UPDATE, \n         FETCH_FORECAST,\n         RECIEVE_FORECAST,\n         CLOSE_FORECAST} from '../actions';\n\n\nconst defaultState = {\n  loading: false,\n  error: '',\n  adding: false,\n  weather: [],\n}\n\nconst basicReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_CITY:\n      return {\n        ...state,\n        adding: true,\n      };\n    case RECIEVE_CITY_WEATHER:\n      return {\n        ...state,\n        adding: false,\n        error: false,\n        weather: [\n          action.payload,\n          ...state.weather,\n        ],\n      }\n    case CATCH_ERROR:\n      return {\n        ...state,\n        error: action.info,\n        adding: false,\n      }\n    case RECIEVE_ALL_WEATHER:\n      return {\n        ...state,\n        weather: [\n          ...action.payload,\n        ]\n      }\n    case DELETE_CITY:\n      return {\n        ...state,\n        weather: [\n          ...state.weather.filter(city => city.id !== action.id)\n        ],\n      }\n    case UPDATE_CITY:\n      return {\n        ...state,\n        weather: state.weather.map(city => {\n          if (city.id !== action.id) {\n            return city;\n          } else {\n            return {\n              ...city,\n              updating: true,\n            }\n          }\n        }),\n      }\n    case RECIEVE_CITY_UPDATE:\n      return {\n        ...state,\n        weather: state.weather.map(city => {\n          if (city.id !== action.payload.id) {\n            return city;\n          } else {\n            return action.payload\n          }\n        }),\n      }\n    case FETCH_FORECAST:\n      return {\n        ...state,\n        weather: state.weather.map(city => {\n          if (city.id !== action.id) {\n            return city;\n          } else {\n            return {\n              ...city,\n              expand: true,\n              fetching: true,\n            }\n          }\n        }),\n      }\n    case RECIEVE_FORECAST:\n      return {\n        ...state,\n        weather: state.weather.map(city => {\n          if (city.id !== action.id) {\n            return city;\n          } else {\n            return {\n              ...city,\n              expand: true,\n              fetching: false,\n              ...action.payload,\n            }\n          }\n        }),\n      }\n    case CLOSE_FORECAST:\n      return {\n        ...state,\n        weather: state.weather.map(city => {\n          if (city.id !== action.id) {\n            return city;\n          } else {\n            return {\n              ...city,\n              expand: false,\n            }\n          }\n        }),\n      }\n    default:\n      return state;\n  }\n}\n\nexport default basicReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux'; \nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport basicReducer from './reducers';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' \n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\n\nconst middleware = process.env.NODE_ENV !== 'production' ?\n  [require('redux-immutable-state-invariant').default(), thunk] :\n  [thunk];\n\nconst store = createStore(\n  basicReducer, \n  composeEnhancers(\n    applyMiddleware(...middleware)\n));\n\nconst app = (\n  <Provider store={store} >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}